{"remainingRequest":"/Users/Chris/Desktop/Programming/smooth-load/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/Chris/Desktop/Programming/smooth-load/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Chris/Desktop/Programming/smooth-load/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Chris/Desktop/Programming/smooth-load/docs/.vuepress/components/CodeDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Chris/Desktop/Programming/smooth-load/docs/.vuepress/components/CodeDemo.vue","mtime":1563234854064},{"path":"/Users/Chris/Desktop/Programming/smooth-load/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/smooth-load/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/smooth-load/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/smooth-load/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Chris/Desktop/Programming/smooth-load/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'AView',\n  data: function data() {\n    return {\n      loading: true,\n      loadedData: Object\n    };\n  },\n  created: function created() {\n    this.loadData();\n  },\n  methods: {\n    loadData: function () {\n      var _loadData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return SomeAPIService.request();\n\n              case 2:\n                response = _context.sent;\n\n                if (response.status === 200) {\n                  this.loadedData.title = response.title;\n                  this.loadedData.content = response.content;\n                  this.loading = false;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }\n};",null]}